---
  name: Linter And Pytest
  
  on: 
    push: 
      branches: team-12-ci
    pull_request: 
      branches: team-12-ci
  
  permissions: { }
  
  jobs:
    build:
      name: Lint
      runs-on: ubuntu-latest
  
      permissions:
        contents: read
        packages: read
        # To report GitHub Actions status checks
        statuses: write
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            # super-linter needs the full git history to get the
            # list of files that changed across commits
            fetch-depth: 0
  
        - name: Super-linter
          uses: super-linter/super-linter@v6.6.0  # x-release-please-version
          env:
            # To report GitHub Actions status checks
            VALIDATE_PYTHON_PYLINT: true
            DISABLE_ERRORS: true
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
    ci:
      name: Pytest
      runs-on: ubuntu-latest
      
      permissions:
        contents: read
        packages: read
        # To report GitHub Actions status checks
        statuses: write
      
      steps:
          - uses: actions/checkout@v4
          
          - name: Install Python
            uses: actions/setup-python@v5
            with:
              python-version: '3.11'
              # see details (matrix, python-version, python-version-file, etc.)
              # https://github.com/actions/setup-python
          - name: Install poetry
            uses: abatilo/actions-poetry@v2
            
          - uses: actions/cache@v3
            name: Define a cache for the virtual environment based on the dependencies lock file
            with:
              path: ./.venv
              key: venv-${{ hashFiles('poetry.lock') }}
          
          - name: Add pytest and pytest-asyncio
            run: poetry add pytest pytest-asyncio
              
          - name: Install the project dependencies
            run: poetry install
          
          - name: Run the automated tests (for example)
            run: poetry run pytest -v